<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Cole World</title>
    <link>https://hicole.me/en/tags/tutorial/</link>
    <description>Recent content in Tutorial on Cole World</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Sep 2023 23:50:36 +0800</lastBuildDate>
    <atom:link href="https://hicole.me/en/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self-host Deployment of RSSHub</title>
      <link>https://hicole.me/en/posts/self-host-deployment-of-rsshub/</link>
      <pubDate>Mon, 11 Sep 2023 23:50:36 +0800</pubDate>
      <guid>https://hicole.me/en/posts/self-host-deployment-of-rsshub/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;&#xA;&lt;p&gt;说起来，我采用「RSS信息源 + 一款心仪的多平台阅读器」这样的方式获取信息已经有一年多的时间了。总的来说，它带给了我很不错体验，有效的缓解了我在Daily Input过程中的一些无奈与焦虑：一方面，它使筛选过的优质信息源尽量常驻，另一方面，它使阅读信息的过程尽量纯粹。&lt;/p&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ColeMei/Picgo/master/blog10/Feed-icon.svg.png&#34;alt=&#34;image&#34;/&gt;&lt;figcaption&gt;&lt;p&gt;RSS (Stand For Really Simple Syndication)&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;p&gt;其实，RSS背后是由一套挺反商业的逻辑在支持，也因此，很多平台和媒体都并不提供官方的RSS订阅链接，毕竟如果每个人都在自己的一隅空间内，不去访问门户网站页面，那么用户的数据偏好从哪里得到？铺天盖地的广告往哪里投送？&lt;/p&gt;&#xA;&lt;p&gt;这样的协议无疑站在了消费主义的对立面。所以，刚才提到的一切想法得以实现的一个理论基底，就是&lt;a href=&#34;https://github.com/DIYgod/RSSHub&#34;&gt;RSSHub&lt;/a&gt;这个伟大的开源项目的存在。关于RSSHub，官方docs中作了如下介绍:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。RSSHub 借助于开源社区的力量快速发展中，目前已适配数百家网站的上千项内容&lt;/p&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ColeMei/Picgo/master/blog10/CleanShot%202023-09-12%20at%2003.08.36%402x.png&#34;alt=&#34;image&#34;/&gt;&lt;figcaption&gt;&lt;p&gt;RSSHub&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;一言以蔽之，很多并没有提供RSS功能的平台与媒体，通过RSSHub的Route(路由)，或者更简单的，利用其Radar插件，可以很方便的生成订阅源。&lt;/p&gt;&#xA;&lt;p&gt;更多关于RSS以及RSSHub的介绍就不在这里展开了，下面切入正题：&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;无尽的折腾&#34;&gt;无尽的折腾&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-需求&#34;&gt;1. 需求&lt;/h3&gt;&#xA;&lt;p&gt;这次折腾之旅的起因是这样的：我经常阅读的一个RSS订阅源-&lt;a href=&#34;https://theinitium.com/&#34;&gt;端传媒&lt;/a&gt;，由于网站的改版与代码重构，原本的源不能获取到文章的全部内容了，需要跳转到原链接去阅读。而网站上的文章文字显示为繁体，且字体看起来不顺眼不说，文章周围还夹杂着很多乱七八糟的内容，很是无奈。&lt;/p&gt;&#xA;&lt;p&gt;花着高昂的订阅费，却得不到称心如意的阅读体验，这还得了(也不得不感叹这些对于体验的改造工作居然要消费者来承担)？于是遂至RSSHub docs的相关路由路径下查看，发现如下字样：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;付费内容全文可能需要登陆获取，详情见部署页面的配置模块。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;也是我第一次了解到原来RSSHub的一整套服务还可以自己部署，至于自建的原因，我是这样理解的：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;由RSSHub的官方域名路径构成的源多数都因被污染、被反制、被滥用等等原由而无法使用。&lt;/li&gt;&#xA;&lt;li&gt;随着很多网站的政策更新，获取其内容所需要的条件越来越苛刻，像是API、Cookies、Token等信息需要预配置。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;好在RSSHub的生态还算完整，对于自建这样一个相对小众的需求也有比较详细（当然还不够！不然我也不写这篇blog了）的文档支持。&lt;/p&gt;&#xA;&lt;h1 id=&#34;hahahugoshortcode15s2hbhb&#34;&gt;&#xA;&#xA;&lt;p style=&#34;text-align:center&#34;&gt;折腾开始！&lt;/p&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;2-基本部署&#34;&gt;2. 基本部署&lt;/h3&gt;&#xA;&lt;p&gt;官方提供的Guideline中有很多种部署方式，我尝试了三种：Docker-Compose部署、HeroKu部署、Vercel部署。最后顺利完成自建是使用的Vercel。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h4 id=&#34;docker-compose&#34;&gt;Docker-compose&lt;/h4&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;9月5日，我开始了第一次尝试。&lt;/p&gt;&#xA;&lt;p&gt;由于我这一阵子刚刚学完Mosh的&lt;a href=&#34;https://www.bilibili.com/video/BV1pf4y1W7YA/&#34;&gt;Ultimate Docker Course&lt;/a&gt;，而古人云：一个人刚刚掌握了一项新的工具后，当他发现能将它立马用到解决自己遇到的实际问题，这无疑是一件很令人激动的事情。于是当我看到支持中有Docker字样的instance时，眼睛放出的光芒四射，我毫不犹豫的优先选择了它。&lt;/p&gt;&#xA;&lt;p&gt;部署的过程不算困难，只需要在Terminal中零星敲上几个指令，就能在本地端口1200下看到“Welcome to RSSHub”的字样，还蛮顺利的。&lt;/p&gt;&#xA;&lt;p&gt;运行docker的相关命令，发现：images成功运行在本地，volumes也没有忘记创建，（嗯，我Docker学的没问题！）但是不知道是不是部署在本地的原因，真正将自建的服务用到订阅源的构建时，基本全是报错。只有少数的一些静态page或是比较简单的网页能够成功的解析。碍于我在网络方面的知识储备相当匮乏，在持续扑腾了两个小时以后，我还是像一只沮丧的旱鸭子一样放弃了，并不甘心的在我的LogSeq的Daily Journal中作了如下记录：&lt;/p&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ColeMei/Picgo/master/blog10/CleanShot%202023-09-12%20at%2001.33.24%402x.png&#34;alt=&#34;image&#34;/&gt;&lt;figcaption&gt;&lt;p&gt;LogSeq-Journal Page-Sep 5th&lt;/p&gt;&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h4 id=&#34;heroku&#34;&gt;HeroKu&lt;/h4&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;时间来到了9月7日，这天我也是经历了挺疯狂的一晚。&lt;/p&gt;&#xA;&lt;p&gt;我千方百计的想要疯狂榨干Github Student Package中的每一滴价值，从下午三点开始把自己埋在电脑前一直到了凌晨三点：从零开始完成了两个Vps的部署（这个有机会也可以另起一篇记录下），申请并注册了个人的第二个domain，学习了使用Termius、浏览了上百个webpage……&lt;/p&gt;&#xA;&lt;p&gt;我将在自己身上时有发生的这种好像进入了某种Zone的状态戏称为“Geeky Time”，也算是另一种比较nerd的“Kenja Taimu”吧。&lt;/p&gt;&#xA;&lt;p&gt;哈哈哈，好像跑题了。&lt;/p&gt;&#xA;&lt;p&gt;话说回来，在Student Package中，我瞥见了Heroku的字样，它也是RSSHub官方支持的一种自建方式，且支持一键部署，但无奈其不提供免费服务，每月的额度也十分有限。这不是和我的学生包中提供的条目完美匹配吗？于是我尝试了注册Heroku，但是倒在了最后一步：没能添加正确的Payment methods，也真是挺奇怪的，我的这张Monai卡陪我注册和订阅过大大小小很多个境外服务，怎么到你这就不行了，无奈作罢。&lt;/p&gt;&#xA;&lt;p&gt;后来分析了下，可能Heroku需要的是国外的本地卡作为支付方式吧，而不是我这样一张简单的Mastercard外币卡。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h4 id=&#34;vercel&#34;&gt;Vercel&lt;/h4&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;最后是Vercel，俗话说好饭不怕晚。其实早在部署我的blog时，我就有体验过Vercel的托管服务，但因为一些原因（一切从简与轻量化）还是选择了Github Pages。基于Vercel的部署过程体验下来还算简单，RSSHub的官方Docs中提供了和Heroku一样的一键部署功能，但这里我还是选择了（也更推荐）带有自动更新的部署方式：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
