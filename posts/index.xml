<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Cole World</title>
		<link>hicole.top/posts/</link>
		<description>Recent content in Posts on Cole World</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Sun, 09 Apr 2023 21:44:18 +0800</lastBuildDate>
		<atom:link href="hicole.top/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>My English Reading Flow —— Collection</title>
			<link>hicole.top/posts/blog5/</link>
			<pubDate>Sun, 09 Apr 2023 21:44:18 +0800</pubDate>
			
			<guid>hicole.top/posts/blog5/</guid>
			<description>Description：这是My Reading Flow （For English Source）系列博客的第三篇</description>
			<content type="html"><![CDATA[<blockquote>
<p><em>Description：这是My Reading Flow （For English Source）系列博客的<strong>第三篇</strong></em></p>
</blockquote>
]]></content>
		</item>
		
		<item>
			<title>My English Reading Flow —— Read</title>
			<link>hicole.top/posts/blog4/</link>
			<pubDate>Sun, 09 Apr 2023 21:37:52 +0800</pubDate>
			
			<guid>hicole.top/posts/blog4/</guid>
			<description>Description：这是My Reading Flow （For English Source）系列博客的第二篇 在上一节中讲完了有关如何获取信息，下面我们回到阅读本身。我大致将</description>
			<content type="html"><![CDATA[<blockquote>
<p><em>Description：这是My Reading Flow （For English Source）系列博客的<strong>第二篇</strong></em></p>
</blockquote>
<p>在上一节中讲完了有关如何获取信息，下面我们回到阅读本身。我大致将我的阅读分为两种，不过思来想去，还是觉得不能简单划分为精读和粗读这样泾渭分明的简单定义，因为其实我读的都挺认真的。可能从阅读的目的或者说是侧重点来讲会更好，第一种阅读是偏向于语料的积累和提高语言的赏析能力，另一种则是以信息的获取为首要目的的阅读。</p>
<h2 id="type-1">Type 1</h2>
<blockquote>
<p>工具：PDF Expert + Eudic</p>
</blockquote>
<p>在这一类阅读中，材料通常是从各大报刊杂志中挑选出的某一篇文章，从体裁上看，news较少，一般是<strong>比较感兴趣的领域的Article</strong>，文章篇幅较长。首先在当期issue的PDF文件中剪切出文章篇幅所在的那几页另存为一个新的PDF文件，以「 精读外刊 序号 + 文章标题 」的方式命名，然后在<a href="https://pdfexpert.com/">PDF Expert</a>中打开，<strong>iPad分屏，左三分之二屏幕是文章，右三分之一是Eudic词典</strong>，然后就可以开始阅读啦。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/06.jpeg"
         alt="image"/><figcaption>
            <p>如何阅读</p>
        </figcaption>
</figure>

<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/07.jpeg"
         alt="image"/><figcaption>
            <p>如何阅读</p>
        </figcaption>
</figure>

<p>在阅读的过程中，我会对各种词汇句子作<strong>勾画标注和分类区分</strong>:</p>
<ul>
<li><em>比如对于词汇来说，用<strong>highlight工具</strong>标注，黄色代表生词，绿色代表动词短语，蓝色代表专有名词，橘色代表熟词僻义，等等。</em></li>
<li><em>对于句子来说，用<strong>underline工具</strong>标注，红色代表这个句子是长难句，我读起来非常费劲，蓝色代表它是带给我思考的句子，橙色则是写的很美的句子，等等。</em></li>
</ul>
<p>这一套标注的流程在我的调教以及软件功能加持下是非常流畅高效的。PDF Expert的普通版就足够使用，完全不必要付费，我曾经尝试过很多款pdf工具，Expert是最令我满意的，page view、bookmark 以及各种标注工具都兼具颜值和效率；而<a href="https://www.eudic.net/v4/en/app/eudic">Eudic</a>能将你查词的<strong>操作成本和频次降至最低</strong>。以一个生词为例，pencil选中，copy然后屏幕右侧的词典中就会自动为你查找该单词（如果你复制的是句子也可以即时翻译），然后点右上角五角星根据你的设计将该单词收录进<strong>Eudic生词本</strong>的对应类别。</p>
<p>值得一提的是，Eudic一定要搭配<a href="https://zhuanlan.zhihu.com/p/115242261"><strong>外部词典</strong></a>导入使用，我选的是一本朗文和一本柯林斯，很多时候读单词的<strong>英英解释</strong>更有利于你理解单词的真正意思和在此语境下的用法，也记得更牢。另外，对于每篇文章新认识的单词（此时应该已经列在生词本中），我都会加入到像是<strong>墨墨背单词</strong>这类App中，利用它们的算法帮助我后续强化巩固记忆。</p>
<p>到这里有的人可能会讲，</p>
<p><strong>Q</strong>：这样阅读不累吗？</p>
<p><strong>A</strong>：是的，加上本身这类阅读我选的文章也普遍偏长，如果像是The New Yorker的一篇文章的话，一天读两个小时也要连续读上三四天才可以读完，但是就像我说的，这类阅读模式不仅仅是为了获取信息本身设计的，它是对于语言<strong>读写能力的全方位提高</strong>。就像上面source中讲到，这样纯粹高水平的英文原版材料，每一次精读整理都是对文章里丰富的信息量和语言点的榨取，每一次读完都是你语言潜修道路上的又一次小精进。</p>
<p><strong>Q</strong>：这样的标注、划分、收录你未来真的会再翻出来看吗？</p>
<p><strong>A</strong>：老实说，每一次读完归档的文章安安静静地陈列在文件夹里，我确实没有一次回头打开他们review。就像我之前听过的一种论调，一些人觉得：稍后读、收藏和摘录其实都是<strong>伪需求</strong>，存起来的文章（稍后读、或标记为想读），基本不会读，收藏起来的文章，也几乎不会看第二遍。我觉得有一定道理，但是换个角度想，在你能真正做到坚持阅读之前，需要一些仪式感来帮助你养成这个习惯，或者说你需要一些印记来证明你读过，你有在吸收、有在感受。所以<strong>我觉得阅读的同时进行标注是必要的</strong>（或许你拿着pencil划着文本读会读的更认真也说不定）。就像你看到一个写得很优美的句子，我忍不住把它标注出来，纵使将来再也不会回头翻看这一处标注，标注那一刻的反馈强化了我的阅读体验，这就足够了。另外收录也必不可少， 看着文件夹里你精读过的文章序号慢慢变大，真的是一笔不小的<strong>成就感</strong>，我甚至为他们在Notion中作了专属的数据库，我们放在下一章Collection中讲。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/08.png"
         alt="image"/><figcaption>
            <p>收录整理</p>
        </figcaption>
</figure>

<h2 id="type-2">Type 2</h2>
<blockquote>
<p>工具：Bob  + Eudic + PopClip(可选)</p>
</blockquote>
<p>讲完了上一种较为繁琐和费时的阅读方式后，接下来要介绍的这种阅读方式则要轻松许多，他的目的简单纯粹：<strong>获取信息、读懂信息</strong>。</p>
<p>其实，这种阅读方式如果将文本材料换成中文（母语）的版本，似乎我并不需要介绍或是分享什么，它遍布在我们从小到大的日常阅读当中，我们打开一篇文章，只是因为我们对文章的领域或内容感兴趣，目的并不在于提升某种语言能力，我们只是饥渴地想要从纷繁的大千世界中获取讯息，更新我们对事物的认知，试着多去了解一点什么。我一直觉得，<strong>求知欲</strong>就像是性欲、求生欲一样，是人类一种最原始的欲望。</p>
<p>于是，当用这种方式去尝试阅读英文信息源时，就自然而然产生了两个基本问题：</p>
<ol>
<li><em>如何寻找我感兴趣的信息？（在Source部分中简单作了简单介绍）</em></li>
<li><em>如何轻松地看懂一篇文章？</em></li>
</ol>
<p>接下来就讲讲第二个问题中一些我的心得与经验。</p>
<p>可能很多人都有阅读外文信息的需求，无论是专业需要，还是兴趣使然。<strong>这并不是一个“外国的月亮比较圆”的问题</strong>，从全世界的角度看，我们每一个人都只是偏安一隅地被身边的信息所围绕着。而与此同时，世界上各个角落都在演绎着自己的精彩故事，用当地语言写出的报道无疑更地道也更靠谱，能更好地带你了解事情的全貌。</p>
<p>走出舒适圈的概念喊了很久，获取信息也要走出自己的圈子，如何从<a href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E8%8C%A7%E6%88%BF/12661227">信息茧房</a>中破壁而出值得被广泛讨论，就拿我最近读的一篇文章为例，讲了一个<a href="https://theconversation.com/forget-the-conspiracies-15-minute-cities-will-free-us-to-improve-our-mental-health-and-wellbeing-200823?utm_source=densediscovery&amp;utm_medium=email&amp;utm_campaign=newsletter-issue-232">15-minute cities</a>的概念，还真的挺有趣，而这很难从我身边打听到。而且互联网上日趋活跃的Online writting的发达生态下，创作者们维护、更新、推送自己的独立blog、newsletter、podacast，甚至是Reddit的一篇帖子，Twitter上的一条tweet都可以成为我们的<strong>信息源</strong>。</p>
<p>以上好像是在说“<strong>我为什么要去阅读外文信息</strong>”的问题，这好像可以是一个蛮宏大的选题，就先简单说到这里吧，还是回到如何阅读本身。既然有了需求，即：<strong>流畅轻松</strong>地看懂外文信息。那么，为什么会看不懂呢？无非是单词不认识，单词组合在一起的句子或段落读不懂，那把他们放到翻译软件中翻译不就好了吗？这当然不用我说，重点是如何让这个look-up的过程尽可能变得流畅、轻松、优雅。</p>
<p>下面这张图是我阅读时的<strong>屏幕截图</strong>，以阅读Apple News的文章为例来说明我是如何阅读的。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/09.png"
         alt="image"/><figcaption>
            <p>如何阅读</p>
        </figcaption>
</figure>

<p>可以看到屏幕大致分为了<strong>三个区域</strong>：</p>
<ol>
<li>
<p><em>文章主体在中间，是我在Apple news+中挑选的文章</em></p>
</li>
<li>
<p><em>查词区域在左</em></p>
<p><em>查词功能由<a href="https://www.eudic.net/v4/en/app/eudic">Eudic</a>中（老朋友了，Type1中有介绍）其自带的鼠标自动取词功能实现，按住contrl（win则是ctrl，键位可自行在偏好设置中修改），将鼠标指针定位在你想要查询的单词上即可完成取词，</em></p>
</li>
<li>
<p><em>翻译语段的区域在右</em></p>
<p><em>翻译功能由<a href="https://bobtranslate.com/">Bob</a>实现，它是一款 macOS 平台的翻译和 OCR 软件，鼠标划过选中需要翻译的文本，按下划词翻译快捷键（默认 ⌥ + D）即可翻译，你可以在Bob中配置不同的翻译引擎，我选择的是<a href="https://www.deepl.com/zh/translator">DeepL</a>（毕竟是号称全世界最准确的翻译软件），并辅助以Google 和 Open AI的translation作为参考</em></p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/10.png"
            alt="image"/><figcaption>
               <p>customize翻译引擎</p>
           </figcaption>
   </figure>

</li>
</ol>
<p>简而言之，当阅读遇到不认识生词时，我只需要完成两个操作，左手按一下，右手在触控板上完成对单词在文本中的定位，即可完成查词；想知道一段语篇的大意，只需要右手在触摸板上完成对语篇的选取，左手按两个键，即可完成翻译。且2、3的查询结果都是以<strong>悬浮窗口</strong>的形式存在的（如图所示），我可以任意调整窗口的大小和位置，以优雅的方式布局阅读界面。悬浮窗口的好处在于，你不用去操纵分屏，也不用切出你所处的文章窗口，一切操纵都能<strong>专注于你正在阅读的文字四周</strong>。</p>
<blockquote>
<p>小Tips：记得调整到合适的位置后就可以选择将悬浮窗口pin住固定，且Bob中可以调整其每次被唤出时所处的默认位置。</p>
</blockquote>
<p>这样一来，我查询<strong>操作的频次</strong>变得非常低，这能最大化降低我对于原始翻译方案下频繁又恼人的查询操作的反感，以免其负反馈于阅读体验本身，将外文信息阅读的体验尽量靠近于母语阅读。同时这套工具的搭配使用不受限于选择何种阅读器，无论是News+，Mail，<a href="https://reederapp.com/">Reeder</a>（我在用的一款RSS阅读器）还是直接在Chrome中阅读，它都能很好的帮助我完成阅读。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/11.png"
         alt="image"/><figcaption>
            <p>在Chrome中阅读</p>
        </figcaption>
</figure>

<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/12.png"
         alt="image"/><figcaption>
            <p>在Reeder中阅读</p>
        </figcaption>
</figure>

<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/13.png"
         alt="image"/><figcaption>
            <p>在Mail中阅读</p>
        </figcaption>
</figure>

<p>如果你想要这套翻译操作再优雅一点点，那就试试<a href="https://pilotmoon.com/popclip/">Popclip</a>吧，本质上讲他是一款Mac上的增强型插件。</p>
<blockquote>
<p><strong>PopClip</strong> appears when you <strong>select text</strong> with your mouse on your Mac. Instantly copy &amp; paste, and access actions like search, spelling, dictionary and <a href="https://pilotmoon.com/popclip/extensions/">many, many more</a>.</p>
</blockquote>
<p>在Popclip的extension中<a href="https://bobtranslate.com/guide/integration/popclip.html#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85">install相关的Bob插件</a>，它甚至可以让你省去按（⌥ + D）的操作，选中文本，点击显示的Bob丑萌丑萌的图标即可完成翻译，我愿称之为——武魂融合技！</p>
<figure><img src="https://cdn.ripperhe.com/oss/master/2022/0508/translate_popclip.gif"
         alt="video"/><figcaption>
            <p>PopClip与Bob的武魂融合技</p>
        </figcaption>
</figure>

<h2 id="小结">小结</h2>
<p>两种阅读模式，侧重点不同，工具不同，甚至是操作平台都不同，（前者主要在pad上完成，后者则主要在mac上阅读），但也有共通之处：</p>
<ul>
<li>
<p><em>使阅读尽可能专注于阅读本身，用优雅流畅的程式化将其他琐碎弱化。</em></p>
</li>
<li>
<p><em>尽可能读完后留下些什么。即时是type 2的阅读中，每一次查词操作，也会将生词星标，仿照type 1进行后续的记忆。</em></p>
</li>
</ul>
<p>总的来说，利用各种效率工具插件打磨并适配你的专属阅读流本身就是一件非常自我且没有止境的事，我相当乐在其中。</p>
]]></content>
		</item>
		
		<item>
			<title>My English Reading Flow —— Source</title>
			<link>hicole.top/posts/blog3/</link>
			<pubDate>Thu, 06 Apr 2023 10:18:11 +0800</pubDate>
			
			<guid>hicole.top/posts/blog3/</guid>
			<description>Description：这是My Reading Flow （For English Source）系列博客的第一篇 首先，第一节中，我们来聊聊信息的来源。开门见山，我获取英文信息的</description>
			<content type="html"><![CDATA[<blockquote>
<p><em>Description：这是My Reading Flow （For English Source）系列博客的<strong>第一篇</strong></em></p>
</blockquote>
<p>首先，第一节中，我们来聊聊信息的来源。开门见山，我获取英文信息的渠道基本如下：</p>
<ul>
<li><em>杂志报刊</em></li>
<li><em>Newsletter</em></li>
<li><em>其他(独立blog, Reddit, Youtube etc.)</em></li>
</ul>
<h2 id="杂志报刊">杂志报刊</h2>
<p>如果你选的是一些比较有名气的journal&amp;magzine，那么从这一渠道获取的信息大多质量非常高，文章语言表达也非常地道得体，但同时<strong>比较难啃</strong>。毕竟文章都是出自名社名家之手，相比于阅读本身，对于我们来说可能更难的是如何找到方便易获取的信息源。当然，直接到感兴趣的报刊官网去订阅电子版无疑是最稳定可靠的，但同时价格不菲。那么除了这种方法，我是如何获取到每一期最新的issue呢？</p>
<p>以我订阅Apple News作时间节点大致可分为两个阶段</p>
<h3 id="阶段1"><strong>阶段1</strong></h3>
<figure class="right"><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/01.png"
         alt="image"/><figcaption>
            <p>分享频道</p>
        </figcaption>
</figure>

<p>我是在一些国内外善良的朋友们的<strong>分享频道</strong>中获取到的，那时主要是把每一期的The New Yorker和Economists找来翻翻，其中感兴趣的文章语篇裁切出来做精读，获取途径大概如下（不过一定要<strong>仔细甄别</strong>分享目的和盈利目的的不同群组，有很多借口卖课的公众号）</p>
<ol>
<li><em>Telegram群组</em></li>
<li><em>RSS订阅</em></li>
</ol>
<p>推荐:</p>
<ul>
<li><em><a href="https://t.me/sharingte">The Economist Sharing Channel</a></em></li>
<li><em><a href="https://plink.anyfeeder.com/">RSS 合集</a></em></li>
</ul>
<h3 id="阶段2">阶段2</h3>
<p>在去年的末尾我终于订阅了垂涎已久的<strong>Apple One</strong>美区全家桶，其中包含的Apple News（以下简称News）无疑是我使用频率最高的增值服务，它相当于是一个各大报刊杂志的<strong>聚合平台</strong>，加持着像是For you的算法推荐和Edito&rsquo;s Pick的信息精炼这样的功能。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/02.png"
         alt="image"/><figcaption>
            <p>News+ Menu</p>
        </figcaption>
</figure>

<p>我也在下面罗列了一些我在关注的channel，基本上都是大名鼎鼎的报社。值得一提的是，如果你订阅了Apple News，这些出版物每一期你都是可以免费获取并下载的，安静整齐地陈列在你的Library里面，随意翻阅，阅读体验也非常纯粹流畅。所以如果News囊括的期刊中有一本是你感兴趣并想要订阅的，其一年的订阅费和News本身的订阅费也就大差不差了。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/03.png"
         alt="image"/><figcaption>
            <p>News+ Library</p>
        </figcaption>
</figure>

<ol>
<li><em>The Wall Street Journal</em></li>
<li><em>TIME</em></li>
<li><em>The Atalntic</em></li>
<li><em>The New Yorker</em></li>
<li><em>WIRED</em></li>
<li><em>National Geographic</em></li>
<li><em>World Soccer</em></li>
</ol>
<p>总之，我觉得News算是非常不错的信息源，它对信息作<strong>索引和分类聚合</strong>，让你可以主动选择自己感兴趣的信息，取百家之所长，而不像上一阶段有赖于别人分享的被动获取，且专注一两家报社造成视角局限。</p>
<p>值得一提的是News只包含在Apple美区的服务中，开通且使用有诸多门槛，适合稍微爱折腾一些的朋友，更多的在这里就不详细介绍了，擅用搜索引擎即可。感兴趣的朋友也可以移步官网 <a href="https://www.apple.com/apple-news/">News+</a>，试一试<strong>Try 1 month for free</strong>.</p>
<h2 id="newsletter">Newsletter</h2>
<p>相比于在News上读社论报道，在这里我更喜欢阅读的多是一些“流水账”，他们读起来非常轻松有趣。</p>
<p>有的是一些作者的一周见闻，大部分是<strong>链接推荐型</strong>，里面有作者觉得不错的书籍，有趣的网站，新鲜的App资讯，甚至是搞笑的GIF或是Overheard on Twitter。它们不是长篇大论的文章，而是一个个链接配上简短说明，所以可以算作是别人已经帮我筛选过一遍的信息索引。就像是每周update一下在世界上另外一个角落的人们的近况，看看他们最近有什么新奇的发现，身边最近发生了什么。<strong>见字如面</strong>，慢慢的这些newsletter的作者就成为了你的某种朋友一样的存在。</p>
<figure><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/04.png"
         alt="image"/><figcaption>
            <p>链接推荐型Newsletter</p>
        </figcaption>
</figure>

<p>另一些则几乎不能用语言来对他们定义类型，毕竟newsletter的种类太多了，作者想分享什么都可以，只要刚好有读者感兴趣，一拍即合。比如我订阅了一个频道专门分享<strong>Desk Setup</strong>的，看着别人把自己的桌面打造的整齐干净，工作环境风格统一真是一件非常舒服又享受的事情。你一定会种草很多产品，然后开始日复一日地折腾改造你自己的桌面。相信我(ｰ ｰ;)</p>
<p>下面附上一些我在订阅的newsletter，因为他们的更新日期都不一样，我是选择每周六把一周囤起来的newsletter<strong>集中</strong>浏览阅读。</p>
<ul>
<li><em><a href="https://www.workspaces.xyz/">Workspaces</a></em></li>
<li><em><a href="https://www.densediscovery.com/">Dense Discovery</a></em></li>
<li><em><a href="https://perell.com/newsletter/">David Perell newsletter</a></em></li>
<li><em><a href="https://weichen.zhubai.love/">生活奇旅</a></em></li>
<li><em><a href="https://bestxtools.zhubai.love/">好工具周刊</a></em></li>
</ul>
<h3 id="碎碎念">碎碎念</h3>
<figure class="right"><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog3/05.png"
         alt="image"/><figcaption>
            <p>Mail Rules</p>
        </figcaption>
</figure>

<p>总觉得自己一直不能很有效的把Mail这个工具利用起来，知道newsletter也是最近几年的事情。不知道是不是国内外的差异，两年前，newsletter就像是Podcast一样在国内<strong>不温不火</strong>（不过都在慢慢发展，已经有了不小的起色），基本还是以RSS订阅独立blog的方式为主。另外就是可能有我还没有进入工作的原因吧，邮箱的利用率本身也不高，我们学院导师甚至不知道有<strong>学生邮箱stu.edu</strong>这个东西的存在，还是我自己去信息中心申请开通的。</p>
<p>总的来讲，Mail无论是工具本身还是其所链接的生态都是<strong>高度稳定可靠</strong>的，拿Mac自带的Mail客户端讲，利用好它的规则工具（RULES）可以很方便的自动化你的收件流程，像我的newsletter通过发件地址的识别都会通过规则自动进入一个单独的分组，这样就不会与其他乱七八糟的邮件混在一起。另外擅用<strong>标记</strong>(Flag)和<strong>移动</strong>(Move)也算是一个小技巧吧。</p>
<h2 id="小结">小结</h2>
<p>总的来说，以上两种source提供了我算是比较正式的那一类阅读的信息材料。当然，可以被称之为信息的太多了，逛逛油管，刷刷推，这些时候我也在获取信息，好像也没什么值得讲的，不过这些都作为我日常生活中的英语元素，多多益善嘛。就像自作安慰的把电子设备的操作系统语言都换成了英语，人为的给自己增添一点儿语言环境，聊胜于无吧。</p>
]]></content>
		</item>
		
		<item>
			<title>This is my first blog</title>
			<link>hicole.top/posts/blog1/</link>
			<pubDate>Mon, 02 Jan 2023 14:56:19 +0800</pubDate>
			
			<guid>hicole.top/posts/blog1/</guid>
			<description>Hello Hugo! The world’s fastest framework for building websites</description>
			<content type="html"><![CDATA[<h3 id="hello-hugo">Hello Hugo!</h3>
<figure><img src="https://d33wubrfki0l68.cloudfront.net/c38c7334cc3f23585738e40334284fddcaf03d5e/2e17c/images/hugo-logo-wide.svg"
         alt="image"/><figcaption>
            <p>The world’s fastest framework for building websites</p>
        </figcaption>
</figure>

]]></content>
		</item>
		
		<item>
			<title>「Archive」Running Pentaho Data Integration on Mac bigSur (M1)</title>
			<link>hicole.top/posts/blog2/</link>
			<pubDate>Sat, 10 Jul 2021 16:47:33 +0800</pubDate>
			
			<guid>hicole.top/posts/blog2/</guid>
			<description>关于在M1 Mac 上安装部署PDI(kettle) 前言 截止我编写这篇笔记之时，Kettle并没有原生支持M1，所以本文大致思路是使用Rosetta</description>
			<content type="html"><![CDATA[<h1 id="关于在m1-mac-上安装部署pdikettle">关于在M1 Mac 上安装部署PDI(kettle)</h1>
<ul>
<li>
<h2 id="前言">前言</h2>
<p>截止我编写这篇笔记之时，Kettle并没有原生支持M1，所以本文大致思路是使用Rosetta转译运行，无需借助任何虚拟机。</p>
</li>
<li>
<h2 id="安装步骤">安装步骤</h2>
<ol>
<li>
<h3 id="配置rosetta-terminal强制在intel模式下运行shell">配置Rosetta Terminal（强制在Intel模式下运行shell）</h3>
<blockquote>
<p>参考 <a href="https://cutecoder.org/software/run-command-line-apple-silicon/">https://cutecoder.org/software/run-command-line-apple-silicon/</a></p>
</blockquote>
<ol>
<li>
<p>打开Terminal终端的 <strong>偏好设置</strong> → <strong>描述文件</strong></p>
</li>
<li>
<p>从左侧选择一个你喜欢的shell → 下方省略号 → <strong>复制描述文件</strong></p>
</li>
<li>
<p>点击新的描述文件 给它起一个好听的名字 就像“Rosetta Shell”</p>
</li>
<li>
<p>右侧点击 <strong>窗口</strong> 再给它起一个好听的标题 就像“Terminal (Intel)”</p>
</li>
<li>
<p>点击 <strong>shell</strong> 运行命令处写入以下 并取消勾选 <strong>在shell中运行</strong></p>
<p><code>env</code> <code>/usr/bin/arch</code> <code>-x86_64 ``/bin/zsh</code> <code>--login</code></p>
</li>
<li>
<p>(可选) 将该shell设置为默认</p>
</li>
</ol>
</li>
<li>
<h3 id="安装-homebrew">安装 Homebrew</h3>
<blockquote>
<p>在arm64架构中 我们需要做两种Homebrew的安装</p>
<blockquote>
<p>/usr/local/homebrew —— 服务于传统intel安装路径</p>
<p>/opt/homebrew —— 服务于已原生支持Apple Silicon的包</p>
</blockquote>
</blockquote>
<ol>
<li>
<p>打开刚配置好的Rosetta Shell</p>
</li>
<li>
<p>输入以下几行命令：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> /usr/local
</span></span><span class="line"><span class="cl">sudo mkdir homebrew
</span></span><span class="line"><span class="cl">sudo chgrp admin homebrew
</span></span><span class="line"><span class="cl">sudo chmod g+rwx homebrew
</span></span><span class="line"><span class="cl">curl -L https://github.com/Homebrew/brew/tarball/master <span class="p">|</span> tar xz --strip <span class="m">1</span> -C homebrew
</span></span></code></pre></div></li>
<li>
<p>在 ～/.zshrc 中加入如下行，来自动选择运行何种homebrew的安装模式</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="s2">&#34;</span><span class="k">$(</span>sysctl -n sysctl.proc_translated<span class="k">)</span><span class="s2">&#34;</span> <span class="o">=</span> <span class="s2">&#34;1&#34;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nb">local</span> <span class="nv">brew_path</span><span class="o">=</span><span class="s2">&#34;/usr/local/homebrew/bin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="nb">local</span> <span class="nv">brew_path</span><span class="o">=</span><span class="s2">&#34;/opt/homebrew/bin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="s2">&#34;</span><span class="si">${</span><span class="nv">brew_path</span><span class="si">}</span><span class="s2">:</span><span class="si">${</span><span class="nv">PATH</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span></code></pre></div><p>记得 <code> source ~/.zshrc</code> 哦～</p>
</li>
</ol>
</li>
<li>
<h3 id="配置-java环境">配置 java环境</h3>
<blockquote>
<p>这里需要对应Kettle和JDK 版本的对应关系 非常严格</p>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/01.png" alt=""></p>
<p>如果已经安装了其他版本JDK 关于mac上的多版本Java管理</p>
<p>请参考 <a href="https://blog.csdn.net/qq_39992641/article/details/117048076">https://blog.csdn.net/qq_39992641/article/details/117048076</a></p>
</blockquote>
<ol>
<li>
<p>打开Rosetta shell 输入如下命令</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">brew tap AdoptOpenJDK/openjdk
</span></span><span class="line"><span class="cl">brew install adoptopenjdk8 
</span></span></code></pre></div></li>
<li>
<p>安装完成后 查看java版本</p>
</li>
</ol>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/02.png" alt="查看java版本"></p>
<p>如图就成功了 我采用的是<strong>kettle9.1 + jdk8</strong></p>
<p>所以 version 一定是要 <strong>1.8.xxx</strong>  还请注意自己的版本对应关系</p>
</li>
<li>
<h3 id="下载kettle">下载Kettle</h3>
<blockquote>
<p>官方下载地址：https://sourceforge.net/projects/pentaho/files/</p>
</blockquote>
<p>点击选择需要的版本 → client-tools → 点击<strong>pdi-ce-xxxxxx.zip</strong>文件下载解压即可</p>
</li>
<li>
<h3 id="启动kettle">启动Kettle</h3>
<p>通过终端进入解压后得到的**/data-integration**目录，</p>
<p>输入命令<code>sh spoon.sh</code> 等待自动启动即可（时间可能较长）</p>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/03.png" alt="启动Kettle"></p>
<p>看到 <strong>Spoon -欢迎!</strong> 字样 大功告成～ 🎉</p>
</li>
</ol>
</li>
</ul>
<p>​</p>
<ul>
<li>
<h2 id="可能出现的问题">可能出现的问题</h2>
<ol>
<li>
<p>I&rsquo;m sorry, this Mac platform [arm64] is not yet supported! Please try starting using &lsquo;Data Integration 32-bit&rsquo; or &lsquo;Data Integration 64-bit&rsquo; as appropriate.</p>
<p><strong>报错如下</strong>：</p>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/04.png" alt="问题1-1"></p>
<p><strong>分析：</strong></p>
<p>Rosetta Termina并没有配置好 并没有用成功Rosetta转译运行 请重回 <strong>步骤1</strong> 仔细参考 <a href="https://cutecoder.org/software/run-command-line-apple-silicon/">https://cutecoder.org/software/run-command-line-apple-silicon/</a></p>
<p><strong>另外我这篇笔记默认您安装了Rosetta 如没有安装 请您先自行安装 网上很多教程</strong></p>
</li>
<li>
<p><strong>java相关问题</strong></p>
<p><strong>报错1:</strong></p>
<p>endorsed is not supported. Endorsed standards and standalone APIs</p>
<p>in modular form will be supported via the concept of upgradeable modules.</p>
<p>Error: Could not create the Java Virtual Machine.</p>
<p>Error: A fatal exception has occurred. Program will exit.</p>
<p><strong>分析：</strong></p>
<p>Java JDK 版本不匹配 请下载正确对应版本 请重回 <strong>步骤3</strong></p>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/05.png" alt="问题2-1"></p>
<p><strong>报错2:</strong></p>
<p>java.lang.UnsatisfiedLinkError: Could not load SWT library. Reasons:</p>
<p>​	no swt-cocoa-4940r23 in java.library.path</p>
<p>​	no swt-cocoa in java.library.path</p>
<p><strong>分析：</strong></p>
<p>Java JDK是arm64版本的 请下载x86版本 因为很多朋友可能在了解kettle之前就在自己心爱的m1上配置了Java环境 但是oracle并没有原生适配M1 所以一般我们下载的都是arm架构的 Zulu JDK 但是由于我们的Kettle是x86</p>
<p><strong>所以架构体系一定要对应！！！请重回步骤3</strong></p>
<p>可以看到 下图 <code>java -version</code> 显示的虽然是jdk版本没问题 但是版本架构不对</p>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/06.png" alt="问题2-2"></p>
</li>
<li>
<p><strong>Kettle mac 启动失败（闪退）报错 Unknown Source</strong></p>
<blockquote>
<p>参考 <a href="https://blog.csdn.net/qq_41066235/article/details/108668423">https://blog.csdn.net/qq_41066235/article/details/108668423</a></p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/07.png" alt="问题3-1"></p>
<p><strong>分析：</strong></p>
<p>下载最新的eclipse.swt包，替换kettle中的原文件即可  <a href="https://mvnrepository.com/artifact/org.eclipse.platform/org.eclipse.swt.cocoa.macosx.x86_64">下载地址</a></p>
<p>替换路径：data-integration → libswt → osx64</p>
<p><img src="https://raw.githubusercontent.com/ColeMei/Picgo/master/blog2/08.png" alt="问题3-2"></p>
</li>
</ol>
</li>
</ul>
<p>​</p>
<ul>
<li>
<h2 id="结语">结语</h2>
<p>M1可真是个磨人的小妖精～ Rosetta的转译不知道后续还会遇到什么bug</p>
<p>期待后续的Kettle学习之路～ 💪</p>
</li>
</ul>
]]></content>
		</item>
		
	</channel>
</rss>
